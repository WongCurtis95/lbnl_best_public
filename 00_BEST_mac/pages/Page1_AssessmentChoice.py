# Form implementation generated from reading ui file 'ui_files_latest/Page1_AssessmentType_qwidget.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

from resources_rc import *
main_page_image = ":images/BEST_landing_abstract.png"
side_page_image = ":images/BEST_side_abstract.png"

class Ui_Page1_AssessmentType(object):
    def setupUi(self, Page1_AssessmentType):
        Page1_AssessmentType.setObjectName("Page1_AssessmentType")
        Page1_AssessmentType.resize(1261, 699)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Page1_AssessmentType.sizePolicy().hasHeightForWidth())
        Page1_AssessmentType.setSizePolicy(sizePolicy)
        Page1_AssessmentType.setStyleSheet("")
        self.cement_decor = QtWidgets.QLabel(parent=Page1_AssessmentType)
        self.cement_decor.setGeometry(QtCore.QRect(0, -30, 171, 761))
        self.cement_decor.setMidLineWidth(0)
        self.cement_decor.setText("")
        self.cement_decor.setPixmap(QtGui.QPixmap(side_page_image))
        self.cement_decor.setScaledContents(False)
        self.cement_decor.setIndent(0)
        self.cement_decor.setObjectName("cement_decor")
        self.layoutWidget = QtWidgets.QWidget(parent=Page1_AssessmentType)
        self.layoutWidget.setGeometry(QtCore.QRect(190, 650, 1051, 35))
        self.layoutWidget.setObjectName("layoutWidget")
        self.button_layout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.button_layout.setContentsMargins(0, 0, 0, 0)
        self.button_layout.setObjectName("button_layout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.button_layout.addItem(spacerItem)
        self.saveBtn = QtWidgets.QPushButton(parent=self.layoutWidget)
        self.saveBtn.setObjectName("saveBtn")
        self.button_layout.addWidget(self.saveBtn)
        self.nextBtn = QtWidgets.QPushButton(parent=self.layoutWidget)
        font = QtGui.QFont()
        font.setKerning(True)
        self.nextBtn.setFont(font)
        self.nextBtn.setObjectName("nextBtn")
        self.button_layout.addWidget(self.nextBtn)
        self.assessment_group = QtWidgets.QGroupBox(parent=Page1_AssessmentType)
        self.assessment_group.setGeometry(QtCore.QRect(200, 50, 1001, 431))
        font = QtGui.QFont()
        font.setBold(True)
        self.assessment_group.setFont(font)
        self.assessment_group.setStyleSheet("QPushButton {\n"
"    background-color: #26481f;  /* Green */\n"
"    color: white;\n"
"    border: none;\n"
"    padding: 8px 16px;\n"
"    font-size: 14px;\n"
"    border-radius: 6px;\n"
"    min-width: 90px;\n"
"    min-height: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41;\n"
"}\n"
"\n"
"QPushButton#saveBtn {\n"
"                background-color: white;\n"
"                color: #26481f;\n"
"            }\n"
"QPushButton#saveBtn:hover {\n"
"                background-color: #45a049;\n"
"              color: white;\n"
"            }\n"
"\n"
"    QLineEdit {\n"
"        border-radius: 10px;    \n"
"        padding: 5px;           \n"
"    }\n"
"\n"
"myLineEdit->setFixedSize(200, 30)")
        self.assessment_group.setTitle("")
        self.assessment_group.setObjectName("assessment_group")
        self.summary_label = QtWidgets.QLabel(parent=self.assessment_group)
        self.summary_label.setGeometry(QtCore.QRect(50, 0, 911, 311))
        self.summary_label.setWordWrap(True)
        self.summary_label.setObjectName("summary_label")
        self.select_label = QtWidgets.QLabel(parent=self.assessment_group)
        self.select_label.setGeometry(QtCore.QRect(53, 370, 425, 17))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.select_label.sizePolicy().hasHeightForWidth())
        self.select_label.setSizePolicy(sizePolicy)
        self.select_label.setObjectName("select_label")
        self.comboBox_assessment_type = QtWidgets.QComboBox(parent=self.assessment_group)
        self.comboBox_assessment_type.setGeometry(QtCore.QRect(640, 360, 250, 32))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_assessment_type.sizePolicy().hasHeightForWidth())
        self.comboBox_assessment_type.setSizePolicy(sizePolicy)
        self.comboBox_assessment_type.setMinimumSize(QtCore.QSize(250, 0))
        self.comboBox_assessment_type.setMaximumSize(QtCore.QSize(250, 16777215))
        self.comboBox_assessment_type.setObjectName("comboBox_assessment_type")
        self.comboBox_assessment_type.addItem("")
        self.comboBox_assessment_type.addItem("")
        self.comboBox_assessment_type.addItem("")

        self.retranslateUi(Page1_AssessmentType)
        QtCore.QMetaObject.connectSlotsByName(Page1_AssessmentType)

    def retranslateUi(self, Page1_AssessmentType):
        _translate = QtCore.QCoreApplication.translate
        Page1_AssessmentType.setWindowTitle(_translate("Page1_AssessmentType", "Form"))
        self.saveBtn.setText(_translate("Page1_AssessmentType", "Save Progress"))
        self.nextBtn.setText(_translate("Page1_AssessmentType", "Next"))
        self.summary_label.setText(_translate("Page1_AssessmentType", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">Detailed Assessment vs. Quick Assessment</span></p><p><span style=\" font-size:14pt;\">This tool offers two options for evaluating energy and production data: a </span><span style=\" font-size:14pt; font-weight:700;\">Detailed Assessment</span><span style=\" font-size:14pt;\"> or a </span><span style=\" font-size:14pt; font-weight:700;\">Quick Assessment</span><span style=\" font-size:14pt;\">.</span></p><p><span style=\" font-size:14pt;\">The </span><span style=\" font-size:14pt; font-weight:700;\">Detailed Assessment </span><span style=\" font-size:14pt;\">requires comprehensive data for each stage of the cement production process. Users must enter production and energy information for raw material handling, preparation (including pre-blending, crushing, and grinding), additive preparation and drying, fuel preparation, homogenization, and kiln systems (preheater, precalciner, kiln, and clinker cooler). Cement grinding data can also be specified, along with any available information on auxiliary operations such as conveying, lighting, office equipment, and other miscellaneous electricity uses. This approach allows for </span><span style=\" font-size:14pt; font-weight:700;\">precise, stage-by-stage comparisons</span><span style=\" font-size:14pt;\">, making the results </span><span style=\" font-size:14pt; font-weight:700;\">more robust and useful for detailed analysis</span><span style=\" font-size:14pt;\">.</span></p><p><span style=\" font-size:14pt;\">The </span><span style=\" font-size:14pt; font-weight:700;\">Quick Assessment</span><span style=\" font-size:14pt;\">, by contrast, focuses on simplicity. It requires only total energy use at the facility, divided by electricity and fuel type, along with production data for each process step. This method </span><span style=\" font-size:14pt; font-weight:700;\">minimizes the amount of data required</span><span style=\" font-size:14pt;\"> and </span><span style=\" font-size:14pt; font-weight:700;\">speeds up </span><span style=\" font-size:14pt;\">the assessment process, but the </span><span style=\" font-size:14pt; font-weight:700;\">results are limited and less comprehensive</span><span style=\" font-size:14pt;\">.</span></p><p><span style=\" font-size:14pt;\">In short, the </span><span style=\" font-size:14pt; font-weight:700;\">Detailed Assessment</span><span style=\" font-size:14pt;\"> is ideal when in-depth, reliable comparisons are needed, while the </span><span style=\" font-size:14pt; font-weight:700;\">Quick Assessment</span><span style=\" font-size:14pt;\"> provides a faster, less data-intensive overview.</span></p></body></html>"))
        self.select_label.setText(_translate("Page1_AssessmentType", "<html><head/><body><p><span style=\" font-size:14pt;\">Select the </span><span style=\" font-size:14pt; font-weight:700;\">assessment type </span><span style=\" font-size:14pt;\">you would prefer and then press Next:</span></p></body></html>"))
        self.comboBox_assessment_type.setItemText(0, _translate("Page1_AssessmentType", "Select Assessment Type"))
        self.comboBox_assessment_type.setItemText(1, _translate("Page1_AssessmentType", "Detailed Assessment"))
        self.comboBox_assessment_type.setItemText(2, _translate("Page1_AssessmentType", "Quick Assessment"))
